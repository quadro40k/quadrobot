const Discord = require('discord.js');
const Sequelize = require('sequelize');

module.exports = {
	name: 'me',
	description: 'Shows player details',
	cooldown: 5,
	aliases: ['player'],
	guildOnly: true,
	execute: async (message) => {

        let currServer = message.guild.id;
		let targetPlayer = message.author.id;

        if(message.mentions.members.keys().next().value) {
			targetPlayer = message.mentions.members.keys().next().value;
		};

        const sequelize = new Sequelize({
            dialect: 'sqlite',
            storage: './data/servers.sqlite'
        });

        const Servers = sequelize.define('servers', {
			server: Sequelize.STRING,
			gangName: Sequelize.STRING,
			gangTag: Sequelize.STRING,
			range: Sequelize.STRING,
			logRange: Sequelize.STRING,
			channel: Sequelize.STRING,
			dirChannel: Sequelize.STRING,
			spreadsheetid: Sequelize.STRING,
			role: Sequelize.STRING,
            captain: Sequelize.STRING,
			dmEnabled: {
				type: Sequelize.BOOLEAN,
				defaultValue: false,
			},
			gangLogo: Sequelize.STRING,
			redBanner: Sequelize.STRING
		});

        await Servers.sync();

    	const server = await Servers.findOne({where: {server: currServer}});

        if(!server) {
            return message.channel.send(`Sorry, I have no data for this server`);
        };

        const Gang = sequelize.define(server.range, {
			name: Sequelize.STRING,
			gamename: {
				type: Sequelize.STRING,
				unique: true,
			},
			prestige: {
                type: Sequelize.INTEGER,
                defaultValue: 0,
            },
			role: {
                type: Sequelize.STRING,
                defaultValue: 'none'
            },
			subrole: {
                type: Sequelize.STRING,
                defaultValue: 'none'
            },
			location: {
                type: Sequelize.STRING,
                defaultValue: 'none'
            },
			timezone: {
                type: Sequelize.STRING,
                defaultValue: 'Etc/UTC'
            },
			bot1health: {
                type: Sequelize.INTEGER,
                defaultValue: 0,
            },
			bot1damage: {
                type: Sequelize.INTEGER,
                defaultValue: 0,
            },
			bot2health: {
                type: Sequelize.INTEGER,
                defaultValue: 0,
            },
			bot2damage: {
                type: Sequelize.INTEGER,
                defaultValue: 0,
            },
			bot3health: {
                type: Sequelize.INTEGER,
                defaultValue: 0,
            },
			bot3damage: {
                type: Sequelize.INTEGER,
                defaultValue: 0,
            },
			trophies: {
                type: Sequelize.INTEGER,
                defaultValue: 0,
            },
			discordid: Sequelize.STRING
		}, {
			freezeTableName: true
		});

		await Gang.sync();

        const player = await Gang.findOne({where: {discordid: targetPlayer}});

        if(!player) {
            return message.channel.send('Sorry, I don\'t have data for this player :confused:');
        };

        const plName = player.gamename;
        const plRole = player.role;
        const plGang = server.gangTag;
        const plBased = player.location;
        const bot1h = Math.round(player.bot1health / 1000);
        const bot1d = Math.round(player.bot1damage / 1000);
        const bot2h = Math.round(player.bot2health / 1000);
        const bot2d = Math.round(player.bot2damage / 1000);
        const bot3h = Math.round(player.bot3health / 1000);
        const bot3d = Math.round(player.bot3damage / 1000);
        const plBot = bot1h + bot1d + bot2h + bot2d + bot3h + bot3d;

        const playerData = `\`\`\`Name:  ${plName}\nGang:  ${plGang}\nRole:  ${plRole}\nBased: ${plBased}\`\`\``;
        const playerBotData = `\`\`\`Total bots power: ${plBot}\nBot 1: ${bot1h}k/${bot1d}k\nBot 2: ${bot2h}k/${bot2d}k\nBot 3: ${bot3h}k/${bot3d}k\`\`\``;

        let target = message.guild.members.cache.get(targetPlayer);
        let nickname = target.displayName;

        const playerEmbed = new Discord.MessageEmbed()
        .setColor('DARK_RED')
        .setThumbnail(server.gangLogo)
        .setAuthor(`Player details for ${nickname}`, target.user.displayAvatarURL())
        .addField('Player data:', playerData, true)
        .addField('Bots details:', playerBotData, true)
        .setTimestamp()
        .setFooter(`generated by quadrobot`)

        return message.channel.send(playerEmbed);
    }
}